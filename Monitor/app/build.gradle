/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.1'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    //log4j2.16なら脆弱性が大丈夫かつ、サポートない
    /*implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.16.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.16.0'
    */

    implementation 'ch.qos.logback:logback-core:1.2.10'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation 'ch.qos.logback:logback-classic:1.2.10'

}

application {
    // Define the main class for the application.
    mainClass = 'Monitor.App'
}

//コンパイル時の文字コードを指定する
tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

task copyConfigDev(type:Copy){
    from 'src/main/resources/config/dev'
    into 'build/resources/Config'
}

//sourceSets.main.output.resourcesDir:Default 	build/resources/main:
//これで、-Penviroment=envでconfigフォルダーを除外できる
def enviroment = project.hasProperty('env') ? env : 'dev'
copy {
    def path = "src/main/resources/Config/dev"
    if(enviroment == 'rel'){
        path = "src/main/resources/Config/release"
    }

    from path
    into 'src/main/resources'

    rename { String files ->
        files.replace("dev", "configApp")
    }
}

sourceSets {
    main{
        resources{
            exclude "Config"
        }
    }
}

print sourceSets.main.resources

//MANIFESTFILEの設定を行う
jar {
    manifest {
        attributes(
                'Main-Class': 'Monitor.App',
                'Multi-Release': 'true'
        )
    }
}
